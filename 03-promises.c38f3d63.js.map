{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EACFI,EAAQ,C,SAAEN,E,MAAUC,IAEpBM,EAAO,C,SAAEP,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAIAQ,SAASC,cAAc,SAC/BC,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAMC,iBACN,MAAQZ,MAAAa,EAAKC,KAAEA,EAAIC,OAAEA,GAAWJ,EAAMK,OAAOC,SACvCC,EAAaC,SAASN,EAAMO,OAC5BC,EAAYF,SAASL,EAAKM,OAC1BE,EAAgBH,SAASJ,EAAOK,OAEtC,IAAIG,EAAeL,EAEnB,IAAK,IAAIM,EAAI,EAAGA,GAAKF,EAAeE,IAClC1B,EAAc0B,EAAGD,GACdE,MAAK,EAAC1B,SAAEA,EAAQC,MAAEA,MACjB0B,EAAA9B,GAAS+B,OAAOC,QAAQ,uBAAqB7B,QAAiBC,MAAU,IAEzE6B,OAAM,EAAC9B,SAAEA,EAAQC,MAAEA,MAClB0B,EAAA9B,GAAS+B,OAAOG,QAAQ,sBAAoB/B,QAAeC,MAAU,IAGzEuB,GAAgBF,C","sources":["src/js/03-promises.js"],"sourcesContent":["import notiflix from 'notiflix';\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nconst form = document.querySelector('.form');\nform.addEventListener('submit', handleSubmit);\n\nfunction handleSubmit(event) {\n  event.preventDefault();\n  const { delay, step, amount } = event.target.elements;\n  const firstDelay = parseInt(delay.value);\n  const delayStep = parseInt(step.value);\n  const promiseAmount = parseInt(amount.value);\n\n  let currentDelay = firstDelay;\n\n  for (let i = 1; i <= promiseAmount; i++) {\n    createPromise(i, currentDelay)\n      .then(({ position, delay }) => {\n        notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n\n    currentDelay += delayStep;\n  }\n}\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","document","querySelector","addEventListener","event","preventDefault","delay1","step","amount","target","elements","firstDelay","parseInt","value","delayStep","promiseAmount","currentDelay","i","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.c38f3d63.js.map"}